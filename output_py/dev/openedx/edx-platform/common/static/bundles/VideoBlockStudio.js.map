{"version":3,"sources":["webpack:///./common/static/xmodule/descriptors/js/001-d7842ab69993e5eb58e8d4a4e80c23a2.js"],"names":["bind","fn","me","apply","arguments","TabsEditingDescriptor","isInactiveClass","element","onSwitchEditor","currentTab","$tabs","$","$content","find","each","_this","index","value","on","filter","length","first","html_id","closest","data","trigger","prototype","e","firstTime","$currentTarget","content_id","onSwitchFunction","previousTab","preventDefault","currentTarget","hasClass","Model","updateValue","modules","tabSwitch","isFunction","removeClass","addClass","attr","save","current_tab","off","getValue","setMetadataEditor","metadataEditor","getStorage","addToStorage","id","addModelUpdate","tabName","modelUpdateFunction","initialize","modelUpdate","addOnSwitch","Storage","call","window"],"mappings":"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","file":"VideoBlockStudio.js","sourcesContent":["/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n// Once generated by CoffeeScript 1.9.3, but now lives as pure JS\n/* eslint-disable */\n(function() {\n  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  this.TabsEditingDescriptor = (function() {\n    TabsEditingDescriptor.isInactiveClass = \"is-inactive\";\n\n    function TabsEditingDescriptor(element) {\n      this.onSwitchEditor = bind(this.onSwitchEditor, this);\n      var currentTab;\n      this.element = element;\n\n      /*\n      Not tested on syncing of multiple editors of same type in tabs\n      (Like many CodeMirrors).\n       */\n      this.$tabs = $(\".tab\", this.element);\n      this.$content = $(\".component-tab\", this.element);\n      this.element.find('.editor-tabs .tab').each((function(_this) {\n        return function(index, value) {\n          return $(value).on('click', _this.onSwitchEditor);\n        };\n      })(this));\n\n      /*\n      If default visible tab is not setted or if were marked as current\n      more than 1 tab just first tab will be shown\n       */\n      currentTab = this.$tabs.filter('.current');\n      if (currentTab.length !== 1) {\n        currentTab = this.$tabs.first();\n      }\n      this.html_id = this.$tabs.closest('.wrapper-comp-editor').data('html_id');\n      currentTab.trigger(\"click\", [true, this.html_id]);\n    }\n\n    TabsEditingDescriptor.prototype.onSwitchEditor = function(e, firstTime, html_id) {\n      var $currentTarget, content_id, isInactiveClass, onSwitchFunction, previousTab;\n      e.preventDefault();\n      isInactiveClass = TabsEditingDescriptor.isInactiveClass;\n      $currentTarget = $(e.currentTarget);\n      if (!$currentTarget.hasClass('current') || firstTime === true) {\n        previousTab = null;\n        this.$tabs.each(function(index, value) {\n          if ($(value).hasClass('current')) {\n            return previousTab = $(value).data('tab_name');\n          }\n        });\n\n        /*\n        init and save data from previous tab\n         */\n        TabsEditingDescriptor.Model.updateValue(this.html_id, previousTab);\n\n        /*\n        Save data from editor in previous tab to editor in current tab here.\n        (to be implemented when there is a use case for this functionality)\n         */\n\n        // call onswitch\n        onSwitchFunction = TabsEditingDescriptor.Model.modules[this.html_id].tabSwitch[$currentTarget.data('tab_name')];\n        if ($.isFunction(onSwitchFunction)) {\n          onSwitchFunction();\n        }\n        this.$tabs.removeClass('current');\n        $currentTarget.addClass('current');\n\n        /*\n        Tabs are implemeted like anchors. Therefore we can use hash to find\n        corresponding content\n         */\n        content_id = $currentTarget.attr('href');\n        return this.$content.addClass(isInactiveClass).filter(content_id).removeClass(isInactiveClass);\n      }\n    };\n\n    TabsEditingDescriptor.prototype.save = function() {\n      var current_tab;\n      this.element.off('click', '.editor-tabs .tab', this.onSwitchEditor);\n      current_tab = this.$tabs.filter('.current').data('tab_name');\n      return {\n        data: TabsEditingDescriptor.Model.getValue(this.html_id, current_tab)\n      };\n    };\n\n    TabsEditingDescriptor.prototype.setMetadataEditor = function(metadataEditor) {\n      return TabsEditingDescriptor.setMetadataEditor.apply(TabsEditingDescriptor, arguments);\n    };\n\n    TabsEditingDescriptor.prototype.getStorage = function() {\n      return TabsEditingDescriptor.getStorage();\n    };\n\n    TabsEditingDescriptor.prototype.addToStorage = function(id, data) {\n      return TabsEditingDescriptor.addToStorage.apply(TabsEditingDescriptor, arguments);\n    };\n\n    TabsEditingDescriptor.Model = {\n      addModelUpdate: function(id, tabName, modelUpdateFunction) {\n\n        /*\n        Function that registers  'modelUpdate' functions of every tab.\n        These functions are used to update value, which will be returned\n        by calling save on component.\n         */\n        this.initialize(id);\n        return this.modules[id].modelUpdate[tabName] = modelUpdateFunction;\n      },\n      addOnSwitch: function(id, tabName, onSwitchFunction) {\n\n        /*\n        Function that registers functions invoked when switching\n        to particular tab.\n         */\n        this.initialize(id);\n        return this.modules[id].tabSwitch[tabName] = onSwitchFunction;\n      },\n      updateValue: function(id, tabName) {\n\n        /*\n        Function that invokes when switching tabs.\n        It ensures that data from previous tab is stored.\n        If new tab need this data, it should retrieve it from\n        stored value.\n         */\n        var modelUpdateFunction;\n        this.initialize(id);\n        modelUpdateFunction = this.modules[id]['modelUpdate'][tabName];\n        if ($.isFunction(modelUpdateFunction)) {\n          return this.modules[id]['value'] = modelUpdateFunction();\n        }\n      },\n      getValue: function(id, tabName) {\n\n        /*\n        Retrieves stored data on component save.\n        1. When we switching tabs - previous tab data is always saved to @[id].value\n        2. If current tab have registered 'modelUpdate' method, it should be invoked 1st.\n        (If we have edited in 1st tab, then switched to 2nd, 2nd tab should\n        care about getting data from @[id].value in onSwitch.)\n         */\n        if (!this.modules[id]) {\n          return null;\n        }\n        if ($.isFunction(this.modules[id]['modelUpdate'][tabName])) {\n          return this.modules[id]['modelUpdate'][tabName]();\n        } else {\n          if (typeof this.modules[id]['value'] === 'undefined') {\n            return null;\n          } else {\n            return this.modules[id]['value'];\n          }\n        }\n      },\n\n      /*\n      html_id's of descriptors will be stored in modules variable as\n      containers for callbacks.\n       */\n      modules: {},\n      Storage: {},\n      initialize: function(id) {\n\n        /*\n        Initialize objects per id. Id is html_id of descriptor.\n         */\n        this.modules[id] = this.modules[id] || {};\n        this.modules[id].tabSwitch = this.modules[id]['tabSwitch'] || {};\n        return this.modules[id].modelUpdate = this.modules[id]['modelUpdate'] || {};\n      }\n    };\n\n    TabsEditingDescriptor.setMetadataEditor = function(metadataEditor) {\n      return TabsEditingDescriptor.Model.Storage['MetadataEditor'] = metadataEditor;\n    };\n\n    TabsEditingDescriptor.addToStorage = function(id, data) {\n      return TabsEditingDescriptor.Model.Storage[id] = data;\n    };\n\n    TabsEditingDescriptor.getStorage = function() {\n      return TabsEditingDescriptor.Model.Storage;\n    };\n\n    return TabsEditingDescriptor;\n\n  })();\n\n}).call(this);\n\n}.call(window));\n\n\n// WEBPACK FOOTER //\n// ./common/static/xmodule/descriptors/js/001-d7842ab69993e5eb58e8d4a4e80c23a2.js"],"sourceRoot":""}