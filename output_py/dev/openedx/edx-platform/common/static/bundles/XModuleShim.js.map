{"version":3,"sources":["webpack:///./xmodule/js/src/xmodule.js?9499"],"names":["XModule","Descriptor","element","update","_","bind","prototype","onUpdate","callback","callbacks","push","data","i","length","save","$","each","index","XBlockToXModuleShim","runtime","initArgs","moduleType","module","window","hasClass","document","trigger","error","console","message","call","exports"],"mappings":"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","file":"XModuleShim.js","sourcesContent":["/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n(function() {\n    'use strict';\n\n    var XModule = {};\n\n    XModule.Descriptor = (function() {\n        /*\n         * Bind the module to an element. This may be called multiple times,\n         * if the element content has changed and so the module needs to be rebound\n         *\n         * @method: constructor\n         * @param {html element} the .xmodule_edit section containing all of the descriptor content\n         */\n        var Descriptor = function(element) {\n            this.element = element;\n            this.update = _.bind(this.update, this);\n        };\n\n        /*\n         * Register a callback method to be called when the state of this\n         * descriptor is updated. The callback will be passed the results\n         * of calling the save method on this descriptor.\n         */\n        Descriptor.prototype.onUpdate = function(callback) {\n            if (!this.callbacks) {\n                this.callbacks = [];\n            }\n\n            this.callbacks.push(callback);\n        };\n\n        /*\n         * Notify registered callbacks that the state of this descriptor has changed\n         */\n        Descriptor.prototype.update = function() {\n            var data, callbacks, i, length;\n\n            data = this.save();\n            callbacks = this.callbacks;\n            length = callbacks.length;\n\n            $.each(callbacks, function(index, callback) {\n                callback(data);\n            });\n        };\n\n        /*\n         * Return the current state of the descriptor (to be written to the module store)\n         *\n         * @method: save\n         * @returns {object} An object containing children and data attributes (both optional).\n         *                   The contents of the attributes will be saved to the server\n         */\n        Descriptor.prototype.save = function() {\n            return {};\n        };\n\n        return Descriptor;\n    }());\n\n    this.XBlockToXModuleShim = function(runtime, element, initArgs) {\n        /*\n         * Load a single module (either an edit module or a display module)\n         * from the supplied element, which should have a data-type attribute\n         * specifying the class to load\n         */\n        var moduleType, module;\n\n        if (initArgs) {\n            moduleType = initArgs['xmodule-type'];\n        }\n        if (!moduleType) {\n            moduleType = $(element).data('type');\n        }\n\n        if (moduleType === 'None') {\n            return;\n        }\n\n        try {\n            module = new window[moduleType](element, runtime);\n\n            if ($(element).hasClass('xmodule_edit')) {\n                $(document).trigger('XModule.loaded.edit', [element, module]);\n            }\n\n            if ($(element).hasClass('xmodule_display')) {\n                $(document).trigger('XModule.loaded.display', [element, module]);\n            }\n\n            return module;\n        } catch (error) {\n            console.error('Unable to load ' + moduleType + ': ' + error.message);\n        }\n    };\n\n    // Export this module. We do it at the end when everything is ready\n    // because some RequireJS scripts require this module. If\n    // `window.XModule` appears as defined before this file has a chance\n    // to execute fully, then there is a chance that RequireJS will execute\n    // some script prematurely.\n    this.XModule = XModule;\n}).call(this);\n\n}.call(window));\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = window.XModule;\n\n\n// WEBPACK FOOTER //\n// ./xmodule/js/src/xmodule.js"],"sourceRoot":""}